// Debug script ƒë·ªÉ x√≥a t√†i kho·∫£n ASP2101
// Ch·∫°y script n√†y trong Console c·ªßa Developer Tools

console.log('üóëÔ∏è ASP2101 Account Deletion Debug Script');
console.log('=====================================');

// Function ƒë·ªÉ x√≥a t√†i kho·∫£n ASP2101
async function deleteASP2101Account() {
  try {
    console.log('üîç T√¨m ki·∫øm t√†i kho·∫£n ASP2101...');
    
    // Ki·ªÉm tra xem c√≥ ƒëang ·ªü trang Settings kh√¥ng
    if (!window.settingsComponent) {
      console.error('‚ùå Kh√¥ng t√¨m th·∫•y Settings component! Vui l√≤ng v√†o trang Settings tr∆∞·ªõc.');
      return;
    }
    
    // G·ªçi method x√≥a ASP2101
    await window.settingsComponent.deleteASP2101Account();
    
    console.log('‚úÖ Ho√†n th√†nh x√≥a t√†i kho·∫£n ASP2101!');
    
  } catch (error) {
    console.error('‚ùå L·ªói khi x√≥a t√†i kho·∫£n ASP2101:', error);
  }
}

// Function ƒë·ªÉ ki·ªÉm tra tr·∫°ng th√°i t√†i kho·∫£n ASP2101
function checkASP2101Status() {
  try {
    console.log('üîç Ki·ªÉm tra tr·∫°ng th√°i t√†i kho·∫£n ASP2101...');
    
    if (!window.settingsComponent) {
      console.error('‚ùå Kh√¥ng t√¨m th·∫•y Settings component!');
      return;
    }
    
    const users = window.settingsComponent.firebaseUsers || [];
    const asp2101User = users.find(user => 
      user.email === 'asp2101@asp.com' || 
      user.displayName === 'HU·ª≤NH MINH T√ö' ||
      user.employeeId === 'ASP2101'
    );
    
    if (asp2101User) {
      console.log('‚úÖ T√¨m th·∫•y t√†i kho·∫£n ASP2101:', asp2101User);
      console.log('   - UID:', asp2101User.uid);
      console.log('   - Email:', asp2101User.email);
      console.log('   - Display Name:', asp2101User.displayName);
      console.log('   - Employee ID:', asp2101User.employeeId);
    } else {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n ASP2101 trong danh s√°ch!');
    }
    
    console.log(`üìä T·ªïng s·ªë t√†i kho·∫£n: ${users.length}`);
    
  } catch (error) {
    console.error('‚ùå L·ªói khi ki·ªÉm tra tr·∫°ng th√°i:', error);
  }
}

// Function ƒë·ªÉ refresh danh s√°ch users
async function refreshUsers() {
  try {
    console.log('üîÑ ƒêang refresh danh s√°ch users...');
    
    if (!window.settingsComponent) {
      console.error('‚ùå Kh√¥ng t√¨m th·∫•y Settings component!');
      return;
    }
    
    await window.settingsComponent.manualRefreshUsers();
    console.log('‚úÖ ƒê√£ refresh danh s√°ch users!');
    
  } catch (error) {
    console.error('‚ùå L·ªói khi refresh users:', error);
  }
}

// Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
console.log('üìã H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:');
console.log('1. deleteASP2101Account() - X√≥a t√†i kho·∫£n ASP2101');
console.log('2. checkASP2101Status() - Ki·ªÉm tra tr·∫°ng th√°i t√†i kho·∫£n ASP2101');
console.log('3. refreshUsers() - Refresh danh s√°ch users');
console.log('');
console.log('‚ö†Ô∏è L∆∞u √Ω: Vui l√≤ng v√†o trang Settings tr∆∞·ªõc khi ch·∫°y c√°c l·ªánh n√†y!');
console.log('');

// Export functions ƒë·ªÉ s·ª≠ d·ª•ng
window.deleteASP2101Account = deleteASP2101Account;
window.checkASP2101Status = checkASP2101Status;
window.refreshUsers = refreshUsers;
