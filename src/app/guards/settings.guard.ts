import { Injectable } from '@angular/core';
import { CanActivate, Router } from '@angular/router';
import { Observable, of } from 'rxjs';
import { map, catchError, tap } from 'rxjs/operators';
import { RolePermissionService } from '../services/role-permission.service';

@Injectable({
  providedIn: 'root'
})
export class SettingsGuard implements CanActivate {

  constructor(
    private rolePermissionService: RolePermissionService,
    private router: Router
  ) { }

  canActivate(): Observable<boolean> {
    console.log('üîí SettingsGuard: Ki·ªÉm tra quy·ªÅn truy c·∫≠p Settings...');
    
    return this.rolePermissionService.canAccessSettings().pipe(
      tap(hasAccess => {
        console.log('üîç SettingsGuard: K·∫øt qu·∫£ ki·ªÉm tra quy·ªÅn:', hasAccess);
      }),
      map(hasAccess => {
        if (hasAccess) {
          console.log('‚úÖ SettingsGuard: Cho ph√©p truy c·∫≠p Settings');
          return true;
        } else {
          console.log('‚ùå SettingsGuard: Kh√¥ng c√≥ quy·ªÅn, chuy·ªÉn v·ªÅ dashboard');
          // N·∫øu kh√¥ng c√≥ quy·ªÅn, chuy·ªÉn v·ªÅ dashboard
          this.router.navigate(['/dashboard']);
          return false;
        }
      }),
      catchError((error) => {
        console.error('üí• SettingsGuard: L·ªói khi ki·ªÉm tra quy·ªÅn:', error);
        // N·∫øu c√≥ l·ªói, chuy·ªÉn v·ªÅ dashboard
        this.router.navigate(['/dashboard']);
        return of(false);
      })
    );
  }
} 